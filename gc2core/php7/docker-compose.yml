# Create a file called gc2.env with these vars
#
# GC2_PASSWORD=12345
# TIMEZONE=CET
# LOCALE=en_US.UTF-8
#
# The run following commands:
#
# docker-compose build
# docker-compose up
#
# There will be created named volumes for persistence.
#
# 'docker-compose down' will not remove data
# 'docker-compose down -v' will remove the volumes!!!

version: '3'
services:
  postgis:
    #build: ../../postgis/.
    image: mapcentia/postgis
    volumes:
      - postgis_var_www_geocloud2:/var/www/geocloud2
      - postgis_var_lib_postgresql:/var/lib/postgresql
      - postgis_var_log:/var/log
      - postgis_etc_postgresql:/etc/postgresql
      - postgis_etc_pgbouncer:/etc/pgbouncer
    env_file:
      - gc2.env
    network_mode: bridge

  gc2core:
    #build: .
    image: mapcentia/gc2core
    privileged: true
    #ports:
      #- "80:80"
      #- "443:443"
      #- "1339:1339"
    environment:
      - VIRTUAL_HOST=localhost
      #- LETSENCRYPT_HOST=example.com
      #- LETSENCRYPT_EMAIL=your@email.com
      #- HTTPS_METHOD=noredirect
    links:
      - postgis:postgis
    volumes:
      - gc2core_var_www_geocloud2:/var/www/geocloud2
      - gc2core_var_log:/var/log
    env_file:
      - gc2.env
    network_mode: bridge

  mapcache:
    #build: ../../mapcache/.
    image: mapcentia/mapcache
    network_mode: service:gc2core
    volumes:
      - gc2core_var_www_geocloud2:/var/www/geocloud2

  vidi:
    build: ../../vidi/.
    image: mapcentia/vidi
    network_mode: bridge
    volumes:
      - root_vidi:/root/vidi

#  nginx-proxy:
#    image: jwilder/nginx-proxy:alpine
#    ports:
#      - 80:80
#      - 443:443
#    volumes:
#      - /var/run/docker.sock:/tmp/docker.sock:ro
#      - nginx-certs:/etc/nginx/certs:ro
#      - nginx-vhosts:/etc/nginx/vhost.d
#      - nginx-letsencrypt-challenge:/usr/share/nginx/html
#    labels:
#      - com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy
#    network_mode: bridge


#  letsencrypt:
#    image: jrcs/letsencrypt-nginx-proxy-companion
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#      - nginx-certs:/etc/nginx/certs
#      - nginx-vhosts:/etc/nginx/vhost.d
#      - nginx-letsencrypt-challenge:/usr/share/nginx/html

volumes:
    gc2core_var_www_geocloud2:
    gc2core_var_log:
    postgis_var_log:
    postgis_var_www_geocloud2:
    postgis_etc_postgresql:
    postgis_var_lib_postgresql:
    postgis_etc_pgbouncer:
    root_vidi:
#    nginx-certs:
#    nginx-vhosts:
#    nginx-letsencrypt-challenge:



